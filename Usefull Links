var links = {
	Front end: {
		Foundation: {
			The most advanced responsive front-end framework in the world (bootstrap's concurrent): http://foundation.zurb.com/
		},
		Charts: {
			 Essential JavaScript: the top five graphical libraries: http://www.creativebloq.com/javascript/essential-javascript-top-five-graphical-libraries-4135720,
			 16 JavaScript Libraries for Creating Beautiful Charts: http://www.sitepoint.com/15-best-javascript-charting-libraries/
		},
		Colors: {
			Colour handling and processing in JavaScript: http://code.stephenmorley.org/javascript/colour-handling-and-processing/
		}
	},
	SharePoint2013: {
		Configuration: {
			Configuring Incoming Email on a SharePoint 2013 Document Library - https://www.youtube.com/watch?v=mHLPZzJ15iU,
			Enable and configure e-mail support for a list or library - https://support.office.com/en-us/article/Enable-and-configure-e-mail-support-for-a-list-or-library-dcaf44a0-1d9b-451a-84c7-6c52e7db908e
		},
		Design: {
			Useful CSS Classes in SharePoint 2013 - https://joshmccarty.com/2014/08/useful-css-classes-sharepoint-2013/,
			SharePoint 2013 CSS classes that suck and save the day - http://blog.sharepointexperience.com/2013/05/sharepoint-2013-css-classes-that-suck-and-save-the-day/
		},
		Programming: {
			SharePoint Escape Characters: https://realsharepoint.wordpress.com/2011/07/22/sharepoint-escape-characters/,
			SharePoint Calculated Column Formulas & Functions â€“ The Essential Guide: http://www.tuomi.ca/2012/09/20/sharepoint-calculated-column-formulas/,
			Calculated Field Formulas MSDN: https://msdn.microsoft.com/en-us/library/office/bb862071(v=office.14).aspx,
			SharePoint 2013 - Understanding and Using the SharePoint 2013 REST Interface: https://msdn.microsoft.com/en-us/magazine/dn198245.aspx,
			Use OData query operations in SharePoint REST requests: https://msdn.microsoft.com/en-us/library/office/fp142385.aspx,
			CRUD on List Items Using REST Services & jQuery: https://www.plusconsulting.com/blog/2013/05/crud-on-list-items-using-rest-services-jquery/,
			CRUD Operation to List Using SharePoint 2013 Rest API: http://www.codeproject.com/Articles/990131/CRUD-Operation-to-List-Using-SharePoint-Rest-API,
			SharePoint 2013 REST expand and filter issue: http://sharepoint.stackexchange.com/questions/164403/sharepoint-2013-rest-expand-and-filter-issue,
			SharePoint 2013 REST expand and filter issue (workaround): {
				var rootUrl = _spPageContextInfo.webAbsoluteUrl, 
				    firstAjaxCallUrl = rootUrl + "/_api/web/Lists?$select=Title&$filter=EntityTypeName eq '[TheNameOfTheCustomListTheFirstTimeItWasCreated]'", 
				    secondAjaxUrl = rootUrl + "/_api/web/Lists/GetByTitle('{0}')/items?$filter=OData__ModerationStatus eq 0&$orderby=Created desc&$top=1";
				    
				makeAjaxCall(firstAjaxCallUrl).then(function (listData) { /*replace '{0}' in secondAjaxUrl with the Title from the returned listData*/ aboutsUsUrl = aboutsUsUrl.replace('{0}', listData[0].Title);  makeAjaxCall(secondAjaxUrl).then(dowhateveryoulike); });
			}
		}
	},
	Rest API: {
		Best Practices: {
			Best Practices for Designing a Pragmatic RESTful API: http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api
                	URI Conventions (OData Version 2.0): http://www.odata.org/documentation/odata-version-2-0/uri-conventions/
                	URL Conventions (OData Version 3.0): http://www.odata.org/documentation/odata-version-3-0/url-conventions/
                	OData Version 4.0 Part 2: URL Conventions Plus Errata 02: http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part2-url-conventions.html
		}
	}
}
